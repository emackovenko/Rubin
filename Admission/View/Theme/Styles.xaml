<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
	xmlns:behavior="clr-namespace:Admission.View.Theme.Behaviors"
	xmlns:controls="clr-namespace:Admission.View.Theme.Controls">
	<LinearGradientBrush
		x:Key="ToolButtonBorderGradient"
		EndPoint="0.5,1"
		StartPoint="0.5,0">
		<GradientStop
			Color="#FF6DC0F9"
			Offset="0" />
		<GradientStop
			Color="White"
			Offset="1" />
	</LinearGradientBrush>
	<SolidColorBrush
		x:Key="AccentColorBrush"
		Color="#CC119EDA" />
	<Style
		TargetType="{x:Type ListViewItem}">
		<Style.Triggers>
			<Trigger
				Property="IsSelected"
				Value="True">
				<Setter
					Property="Foreground"
					Value="White" />
				<Setter
					Property="Background"
					Value="#FF3BA5FD" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style
		x:Key="AsyncListView"
		TargetType="ListView">
		<Style.Triggers>
			<Trigger
				Property="ItemsSource"
				Value="{x:Null}">
				<Setter
					Property="Template"
					Value="{StaticResource ResourceKey=DataWaitControlTemplate}" />
			</Trigger>
		</Style.Triggers>
	</Style>		
	<Style
		TargetType="GroupBox">
		<Setter
			Property="BorderBrush"
			Value="DarkBlue" />
	</Style>
	<Style
		x:Key="LogTextBox"
		TargetType="TextBox">
		<Setter
			Property="BorderBrush"
			Value="{x:Null}" />
		<Setter
			Property="VerticalScrollBarVisibility"
			Value="Auto" />
		<Setter
			Property="IsReadOnly"
			Value="True" />
		<Setter
			Property="TextWrapping"
			Value="Wrap" />
		<Setter
			Property="FontFamily"
			Value="Courier New" />
		<Setter
			Property="FontSize"
			Value="12" />
		<Setter
			Property="TextAlignment"
			Value="Left" />
		<Setter
			Property="behavior:AutoScrollTextBoxBehavior.ScrollOnTextChanged"
			Value="True" />
	</Style>
	<Style
		x:Key="LoadingIndicatorArcsStyleKey"
		TargetType="{x:Type controls:WaitIndicator}">
		<Setter
			Property="Foreground"
			Value="{DynamicResource AccentColorBrush}" />
		<Setter
			Property="VerticalAlignment"
			Value="Center" />
		<Setter
			Property="HorizontalAlignment"
			Value="Center" />
		<Setter
			Property="Width"
			Value="40" />
		<Setter
			Property="Height"
			Value="40" />
		<Setter
			Property="Template">
			<Setter.Value>
				<ControlTemplate
					TargetType="{x:Type controls:WaitIndicator}">
					<Border
						x:Name="PART_Border"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						Background="{TemplateBinding Background}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup
								x:Name="SizeStates">
								<VisualState
									x:Name="Large" />
								<VisualState
									x:Name="Small" />
							</VisualStateGroup>
							<VisualStateGroup
								x:Name="ActiveStates">
								<VisualState
									x:Name="Inactive" />
								<VisualState
									x:Name="Active">
									<Storyboard
										SpeedRatio="{TemplateBinding SpeedRatio}">
										<DoubleAnimationUsingKeyFrames
											RepeatBehavior="Forever"
											Storyboard.TargetName="PART_Canvas0"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
											<LinearDoubleKeyFrame
												KeyTime="0:0:0.000"
												Value="0" />
											<LinearDoubleKeyFrame
												KeyTime="0:0:3.000"
												Value="360" />
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames
											RepeatBehavior="Forever"
											Storyboard.TargetName="PART_Canvas1"
											Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
											<LinearDoubleKeyFrame
												KeyTime="0:0:0.000"
												Value="0" />
											<LinearDoubleKeyFrame
												KeyTime="0:0:2.000"
												Value="-360" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>

						<Border.Resources>
							<Style
								TargetType="{x:Type Canvas}">
								<Setter
									Property="RenderTransformOrigin"
									Value="0.5,0.5" />
								<Setter
									Property="RenderTransform">
									<Setter.Value>
										<RotateTransform />
									</Setter.Value>
								</Setter>
							</Style>
						</Border.Resources>

						<Grid
							Background="Transparent">
							<Grid.RenderTransform>
								<TransformGroup>
									<ScaleTransform
										ScaleX="0.5"
										ScaleY="0.5" />
									<TranslateTransform
										X="10"
										Y="10" />
								</TransformGroup>
							</Grid.RenderTransform>
							<Canvas
								x:Name="PART_Canvas0"
								Opacity="1.0">
								<Path
									Stroke="{TemplateBinding Foreground}"
									StrokeThickness="10">
									<Path.Data>
										<PathGeometry>
											<PathGeometry.Transform>
												<TranslateTransform
													X="20"
													Y="-20" />
											</PathGeometry.Transform>
											<PathGeometry.Figures>
												<PathFigureCollection>
													<PathFigure
														StartPoint="0,0">
														<PathFigure.Segments>
															<PathSegmentCollection>
																<ArcSegment
																	Size="40,40"
																	IsLargeArc="True"
																	SweepDirection="CounterClockwise"
																	Point="40,40" />
															</PathSegmentCollection>
														</PathFigure.Segments>
													</PathFigure>
												</PathFigureCollection>
											</PathGeometry.Figures>
										</PathGeometry>
									</Path.Data>
								</Path>
							</Canvas>

							<Canvas
								x:Name="PART_Canvas1"
								Opacity="0.3">
								<Path
									Stroke="{TemplateBinding Foreground}"
									StrokeThickness="10">
									<Path.Data>
										<PathGeometry>
											<PathGeometry.Transform>
												<TranslateTransform
													X="-7"
													Y="7" />
											</PathGeometry.Transform>
											<PathGeometry.Figures>
												<PathFigureCollection>
													<PathFigure
														StartPoint="0,0">
														<PathFigure.Segments>
															<PathSegmentCollection>
																<ArcSegment
																	Size="30,30"
																	IsLargeArc="True"
																	SweepDirection="Clockwise"
																	Point="40,40" />
															</PathSegmentCollection>
														</PathFigure.Segments>
													</PathFigure>
												</PathFigureCollection>
											</PathGeometry.Figures>
										</PathGeometry>
									</Path.Data>
								</Path>
							</Canvas>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style
		x:Key="LoadingIndicatorArcsStyle"
		TargetType="{x:Type controls:WaitIndicator}"
		BasedOn="{StaticResource LoadingIndicatorArcsStyleKey}">
		<Setter
			Property="IsActive"
			Value="True" />
		<Setter
			Property="SpeedRatio"
			Value="2" />
	</Style>
	<ControlTemplate
		x:Key="DataWaitControlTemplate">
		<StackPanel
			Orientation="Horizontal"
			HorizontalAlignment="Center"
			VerticalAlignment="Center">
			<controls:WaitIndicator
				Margin="15"
				Style="{StaticResource ResourceKey=LoadingIndicatorArcsStyle}" />
		</StackPanel>
	</ControlTemplate>
	<LinearGradientBrush x:Key="ToolButtonBorder" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF515151" Offset="0"/>
		<GradientStop Color="White" Offset="1"/>
	</LinearGradientBrush>
	<BlurEffect
		x:Key="NotAvailableEffect"
		KernelType="Box"
		Radius="5" />
	<Style x:Key="ToolButton" TargetType="{x:Type Button}">
		<Setter Property="BorderBrush" Value="{StaticResource ResourceKey=ToolButtonBorder}"/>
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Foreground" Value="{x:Null}"/>
		<Style.Triggers>
			<Trigger
				Property="IsEnabled"
				Value="False">
				<Setter
					Property="Effect"
					Value="{StaticResource NotAvailableEffect}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
	